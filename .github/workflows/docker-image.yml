name: Docker Image CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  # buildAndPush:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: login to docker hub
  #     uses: docker/login-action@v1
  #     with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1
  #     id: buildx
  #   - name: Build and Push
  #     uses: docker/build-push-action@v2
  #     id: docker_build
  #     with:
  #         context: ./
  #         file: ./docker-compose.github.yml
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/figureshop:latest
  createEnvFile:
    runs-on: ubuntu-latest
    steps:
      - name: create env file on frontend
        uses: actions/setup-node@v2
          with:
            node-version: 16
            cache: 'yarn'
        run: |
              ls
              echo "DB_HOST=${{ secrets.DB_HOST }}
                    DB_PORT=${{ secrets.DB_PORT }}
                    DB_USERNAME=${{ secrets.DB_USERNAME }}
                    DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                    DB_NAME=${{ secrets.DB_NAME }}
                    JWT_SECRET=${{ secrets.JWT_SECRET }}
                    PORT=${{ secrets.SERVER_PORT }}
                    CLIENT_URL=${{ secrets.CLIENT_URL }}
                    REDIS_PORT=${{ secrets.REDIS_PORT }}
                    REDIS_DB_NUMBER=${{ secrets.REDIS_DB_NUMBER }}
                    REDIS_HOST=${{ secrets.REDIS_HOST }}" > .env.production
             
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: buildAndPush
  #   steps:
  #     - name: executing remote ssh commands using ssh key
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           cd /app/Dating-app
  #           docker-compose pull
  #           docker-compose up -d